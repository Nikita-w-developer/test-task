{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchProduct = createAsyncThunk(\"product/fetchProducts\", async () => {\n  const url = \"https://dummyjson.com/products\";\n  const {\n    data\n  } = await axios.get(url);\n  return data;\n  // const {id, title, images} = params\n  // const response = await fetch(url);\n  // const data = await response.json();\n  // console.log(data.products);\n});\nconst initialState = {\n  items: [],\n  isLiked: []\n};\nexport const productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    addFavourite: (state, action) => {\n      if (isLiked.find(state.action)) {\n        const indexDel = isLiked.indexOf(state.action);\n        state.isLiked.splice(indexDel, 1);\n      } else {\n        state.isLiked.push(action);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProduct.fulfilled, (state, action) => {\n      state.items.push(action.payload.products);\n      state.items = state.items.flat();\n    });\n  }\n});\nexport const {\n  addFavourite,\n  setItems\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchProduct","url","data","get","initialState","items","isLiked","productSlice","name","reducers","addFavourite","state","action","find","indexDel","indexOf","splice","push","extraReducers","builder","addCase","fulfilled","payload","products","flat","setItems","actions","reducer"],"sources":["D:/Projects/test-task/src/redux/Slices/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchProduct = createAsyncThunk(\r\n  \"product/fetchProducts\",\r\n  async () => {\r\n    const url = \"https://dummyjson.com/products\";\r\n    const { data } = await axios.get(url);\r\n    return data;\r\n    // const {id, title, images} = params\r\n    // const response = await fetch(url);\r\n    // const data = await response.json();\r\n    // console.log(data.products);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  items: [],\r\n  isLiked: [],\r\n};\r\n\r\nexport const productSlice = createSlice({\r\n  name: \"product\",\r\n  initialState,\r\n  reducers: {\r\n    addFavourite: (state, action) => {\r\n      if (isLiked.find(state.action)) {\r\n        const indexDel = isLiked.indexOf(state.action);\r\n        state.isLiked.splice(indexDel, 1);\r\n      } else {\r\n        state.isLiked.push(action);\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProduct.fulfilled, (state, action) => {\r\n      state.items.push(action.payload.products);\r\n      state.items = state.items.flat();\r\n    });\r\n  },\r\n});\r\n\r\nexport const { addFavourite, setItems } = productSlice.actions;\r\n\r\nexport default productSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,uBAAuB,EACvB,YAAY;EACV,MAAMG,GAAG,GAAG,gCAAgC;EAC5C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACF,GAAG,CAAC;EACrC,OAAOC,IAAI;EACX;EACA;EACA;EACA;AACF,CACF,CAAC;AAED,MAAME,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGV,WAAW,CAAC;EACtCW,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,IAAIN,OAAO,CAACO,IAAI,CAACF,KAAK,CAACC,MAAM,CAAC,EAAE;QAC9B,MAAME,QAAQ,GAAGR,OAAO,CAACS,OAAO,CAACJ,KAAK,CAACC,MAAM,CAAC;QAC9CD,KAAK,CAACL,OAAO,CAACU,MAAM,CAACF,QAAQ,EAAE,CAAC,CAAC;MACnC,CAAC,MAAM;QACLH,KAAK,CAACL,OAAO,CAACW,IAAI,CAACL,MAAM,CAAC;MAC5B;IACF;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACpB,YAAY,CAACqB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACN,KAAK,CAACY,IAAI,CAACL,MAAM,CAACU,OAAO,CAACC,QAAQ,CAAC;MACzCZ,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACmB,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEd,YAAY;EAAEe;AAAS,CAAC,GAAGlB,YAAY,CAACmB,OAAO;AAE9D,eAAenB,YAAY,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}