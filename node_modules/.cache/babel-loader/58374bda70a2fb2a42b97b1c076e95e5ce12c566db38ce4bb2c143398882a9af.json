{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  id: 31,\n  title: \"\",\n  price: \"\",\n  description: \"\",\n  imageUrl: \"\"\n};\nexport const newProductSlice = createSlice({\n  name: \"newProduct\",\n  initialState,\n  reducers: {\n    setForm: (state, action) => {\n      if (state.id === state.id) {\n        state.id += 1;\n      }\n      return {\n        ...state,\n        ...action.payload\n      };\n    }\n  }\n});\nexport const {\n  setForm,\n  setImageUrl\n} = newProductSlice.actions;\nexport default newProductSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","title","price","description","imageUrl","newProductSlice","name","reducers","setForm","state","action","payload","setImageUrl","actions","reducer"],"sources":["D:/Projects/test-task/src/redux/Slices/newProductSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  id: 31,\r\n  title: \"\",\r\n  price: \"\",\r\n  description: \"\",\r\n  imageUrl: \"\",\r\n};\r\n\r\nexport const newProductSlice = createSlice({\r\n  name: \"newProduct\",\r\n  initialState,\r\n  reducers: {\r\n    setForm: (state, action) => {\r\n      if (state.id === state.id) {\r\n        state.id += 1;\r\n      }\r\n      return { ...state, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setForm, setImageUrl } = newProductSlice.actions;\r\n\r\nexport default newProductSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,YAAY,GAAG;EACnBC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGP,WAAW,CAAC;EACzCQ,IAAI,EAAE,YAAY;EAClBP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,IAAID,KAAK,CAACT,EAAE,KAAKS,KAAK,CAACT,EAAE,EAAE;QACzBS,KAAK,CAACT,EAAE,IAAI,CAAC;MACf;MACA,OAAO;QAAE,GAAGS,KAAK;QAAE,GAAGC,MAAM,CAACC;MAAQ,CAAC;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,OAAO;EAAEI;AAAY,CAAC,GAAGP,eAAe,CAACQ,OAAO;AAE/D,eAAeR,eAAe,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}